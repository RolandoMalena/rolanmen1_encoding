name: Build

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:
    inputs:
      clips_to_encode:
        description: 'JSON string of clips to be encoded. If omitted will use a test clip.'
        required: false
        default: '["clip1"]'
      segments:
        description: 'JSON string of  the amount of segments to splice and encode each clip. Must be a set of sequential numbers starting from 1. If omitted splice into 15 segments.'
        required: false
        default: '[1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15]'

jobs:
  build_apps:
    runs-on: windows-2019
    steps:
      - uses: LouisBrunner/checks-action@v1.1.1
        if: always()
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          name: Build Apps
          status: 'in_progress'

      - uses: actions/checkout@v2

      - name: Setup .NET Core SDK 3.1
        uses: actions/setup-dotnet@v1.7.2
        with:
          dotnet-version: '3.1.x'
      
      - name: Restore App Dependencies
        run: |
          cd ./Apps
          dotnet restore

      - name: Build Apps
        run: |
          cd ./Apps
          dotnet build --configuration Release --no-restore
      
      - name: 'Upload ScriptSegmentation Files'
        uses: actions/upload-artifact@v2.2.4
        with:
          name: 'ScriptSegmentationFiles'
          path: 'Apps/ScriptSegmentation/bin/Release/netcoreapp3.1/*'
          retention-days: 30
      
      - name: 'Upload RemoteFileManager Files'
        uses: actions/upload-artifact@v2.2.4
        with:
          name: 'RemoteFileManagerFiles'
          path: 'Apps/RemoteFileManager/bin/Release/netcoreapp3.1/*'
          retention-days: 30
      
      - name: Format Clips to Encode Input Parameter
        run: |
          $clips = '${{github.event.inputs.clips_to_encode}}'.Replace('"', '\"')
          echo "formated_clips=$clips" >> $GITHUB_ENV
      
      - name: 'Dispatch Encode Workflow'
        uses: benc-uk/workflow-dispatch@v1
        with:
          workflow: ${{ secrets.ENCODE_WORKFLOW_ID }}
          token: ${{ secrets.OAUTH_TOKEN }}
          ref: ${{ github.event.pull_request.head.ref || github.head_ref }}
          inputs: '{ "clips_to_encode": "${{env.formated_clips}}", "segments": "${{github.event.inputs.segments}}", "run_id": "${{ github.run_id }}" }'
      
      - uses: LouisBrunner/checks-action@v1.1.1
        if: always()
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          name: Build Apps
          status: 'completed'
          conclusion: ${{ job.status }}