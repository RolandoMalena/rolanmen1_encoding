name: Join

on:
  workflow_dispatch:
  workflow_run:
    workflows: ["Encode"]
    types: [completed]

jobs:
  merge_files:
    runs-on: windows-2019
    if: ${{ github.event.workflow_run.conclusion == '' || github.event.workflow_run.conclusion == 'success' }}
    strategy:
      matrix:
        clip: ["clip"]
    steps:
      - uses: actions/checkout@v2
        with:
          ref: ${{ github.event.workflow_run.head_branch }}
      
      - name: Download RemoteFileManager Files
        uses: dawidd6/action-download-artifact@v2
        with:
          name: RemoteFileManagerFiles
          path: 'RemoteFileManagerFiles'
          workflow: build.yml
          workflow_conclusion: completed
          branch: ${{ github.event.workflow_run.head_branch }}

      - name: Download Google Drive Credentials
        run: |
          cd RemoteFileManagerFiles
          New-Item -Path . -Name "credentials.json" -ItemType "file" -Value '${{ secrets.GOOGLE_DRIVE_SECRET }}'
      
      - name: Download Encoded Footage
        run: |
          cd RemoteFileManagerFiles
          ./RemoteFileManager.exe down ../Encoding/Output "${{matrix.clip}}" "\d{1,}\.mkv|audio\.wav"
      
      - name: Run MKV Merge
        run: |
          cd ./Encoding/Output

          $orderedFiles = @()
          $files = $(Get-ChildItem . -Filter *.mkv) | Select -expand Name
          $files | ForEach-Object -Process {
              $orderedFiles = $orderedFiles + [int]::Parse($_.Replace(".mkv", ""))
          }
          $orderedFiles = $orderedFiles | Sort-Object | ForEach-Object {"$_.mkv"}

          ../mkvmerge.exe -o "${{matrix.clip}}.mkv" audio.wav '[' $orderedFiles[0] $orderedFiles[1] $orderedFiles[2] $orderedFiles[3] $orderedFiles[4] $orderedFiles[5] $orderedFiles[6] $orderedFiles[7] $orderedFiles[8] $orderedFiles[9] $orderedFiles[10] $orderedFiles[11] $orderedFiles[12] $orderedFiles[13] $orderedFiles[14] $orderedFiles[15] $orderedFiles[16] $orderedFiles[17] $orderedFiles[18] $orderedFiles[19] ']'

      - name: Upload Final Output
        run: |
          cd RemoteFileManagerFiles
          ./RemoteFileManager.exe up ../Encoding/Output "Encoded" "${{matrix.clip}}"
